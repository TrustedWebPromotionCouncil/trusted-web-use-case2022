/* tslint:disable */
/* eslint-disable */
/**
 * bunsin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AlterEgoAllOf,
    AlterEgoAllOfFromJSON,
    AlterEgoAllOfFromJSONTyped,
    AlterEgoAllOfToJSON,
    CreditCard,
    CreditCardFromJSON,
    CreditCardFromJSONTyped,
    CreditCardToJSON,
    Email,
    EmailFromJSON,
    EmailFromJSONTyped,
    EmailToJSON,
    SMS,
    SMSFromJSON,
    SMSFromJSONTyped,
    SMSToJSON,
} from './';

/**
 * 
 * @export
 * @interface AlterEgo
 */
export interface AlterEgo {
    /**
     * 
     * @type {number}
     * @memberof AlterEgo
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof AlterEgo
     */
    name: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof AlterEgo
     */
    emailIds?: Array<number>;
    /**
     * 
     * @type {Email}
     * @memberof AlterEgo
     */
    readonly email?: Email;
    /**
     * 
     * @type {boolean}
     * @memberof AlterEgo
     */
    emailActive?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AlterEgo
     */
    smsId?: number;
    /**
     * 
     * @type {SMS}
     * @memberof AlterEgo
     */
    readonly sms?: SMS;
    /**
     * 
     * @type {number}
     * @memberof AlterEgo
     */
    creditCardId?: number;
    /**
     * 
     * @type {CreditCard}
     * @memberof AlterEgo
     */
    readonly creditCard?: CreditCard;
    /**
     * 
     * @type {Date}
     * @memberof AlterEgo
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AlterEgo
     */
    readonly updatedAt?: Date;
}

export function AlterEgoFromJSON(json: any): AlterEgo {
    return AlterEgoFromJSONTyped(json, false);
}

export function AlterEgoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlterEgo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'emailIds': !exists(json, 'email_ids') ? undefined : json['email_ids'],
        'email': !exists(json, 'email') ? undefined : EmailFromJSON(json['email']),
        'emailActive': !exists(json, 'email_active') ? undefined : json['email_active'],
        'smsId': !exists(json, 'sms_id') ? undefined : json['sms_id'],
        'sms': !exists(json, 'sms') ? undefined : SMSFromJSON(json['sms']),
        'creditCardId': !exists(json, 'credit_card_id') ? undefined : json['credit_card_id'],
        'creditCard': !exists(json, 'credit_card') ? undefined : CreditCardFromJSON(json['credit_card']),
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}

export function AlterEgoToJSON(value?: AlterEgo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'email_ids': value.emailIds,
        'email_active': value.emailActive,
        'sms_id': value.smsId,
        'credit_card_id': value.creditCardId,
    };
}

